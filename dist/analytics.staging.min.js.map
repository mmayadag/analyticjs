{
  "version": 3,
  "sources": ["../src/metrics/measureMetrics/getDomLoad.ts", "../src/metrics/measureMetrics/getNetworkingEvents.ts", "../src/metrics/measureMetrics/getTTFB.ts", "../src/metrics/measureMetrics/getFCP.ts", "../src/metrics/measureMetrics/getWindowLoad.ts", "../src/metrics/getMetrics.ts", "../src/metrics/postMetrics.ts", "../src/index.ts"],
  "sourcesContent": ["export const getDomLoad = (navigationEntry): number => navigationEntry.domComplete;", "import { ResourceFilesType } from '../types';\n\nexport const getNetworkingEvents = () => {\n\n    // Get all resources entries\n    const resourceListEntries: PerformanceEntryList = performance.getEntriesByType(\"resource\");\n\n    // Filter resources - Network timings for Document, Image, Font, JS, and CSS\n    let initiatorTypes: string[] = ['css', 'script', 'link', 'img', 'subdocument', 'other']\n\n    const resources: ResourceFilesType = [];\n    resourceListEntries.forEach((resource: any) => {\n        const { name, initiatorType, duration, transferSize } = resource;\n        if (initiatorTypes.indexOf(initiatorType) == -1) {\n            return;\n        }\n        resources.push({\n            url: name,\n            type: initiatorType,\n            duration: duration,\n            transferSize: transferSize\n        });\n    });\n    return resources;\n}", "export const getTTFB = (navigationEntry): number => {\n    return navigationEntry.responseStart - navigationEntry.requestStart;\n}", "export const getFCP = (performance: PerformanceEntry | any): number => {\n    const firstContentfulPaintEntry = performance.getEntriesByType(\"paint\")[0];\n    return firstContentfulPaintEntry ? firstContentfulPaintEntry.startTime : 0;\n}", "export const getWindowLoad = (navigationEntry): number => navigationEntry.loadEventEnd - navigationEntry.loadEventStart", "import { getFCP, getTTFB, getNetworkingEvents, getDomLoad, getWindowLoad } from './measureMetrics'\nimport { MetricData } from './types';\n\nexport const getMetrics = (): MetricData => {\n    const { performance } = window;\n    const navigationEntry = performance.getEntriesByType(\"navigation\")[0];\n\n    return {\n        ttfb: getTTFB(navigationEntry),\n        fcp: getFCP(performance),\n        domComplete: getDomLoad(navigationEntry),\n        windowLoadEvent: getWindowLoad(navigationEntry),\n        resources: getNetworkingEvents()\n    };\n}\n", "import { MetricResourcesType } from './types';\nexport const postMetrics = async (metrics) => {\n    const api = 'https://perf-analytics-murat-api.herokuapp.com/api/v1/metrics' //process.env.API_METRICS_URL\n\n    const metricsData: MetricResourcesType = {\n        ...metrics,\n        user_agent: navigator.userAgent,\n        url: window.location.href\n    };\n\n    let request = await fetch(`${api}`, {\n        method: 'post',\n        mode: 'cors', // no-cors, *cors, same-origin\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(metricsData)\n    })\n\n    /*\n    * Becon send method\n    * needs cors allow\n      let headers = {\n          type: 'application/json'\n      };\n      let metricsData = {\n          ...metrics,\n          resources: [\"test\"],\n          url: window.location.href\n      }\n    let blob = new Blob([JSON.stringify(metricsData)], headers);\n      navigator.sendBeacon(api, blob); // TODO: Catch exeptions\n\n      */\n};", "/*!\n * Analaytics.js\n * Performance Analaytics javascript file. This js collects web vitals & web performance data.\n * https://mayadag.com/\n * \n * Released under the MIT license\n *\n * Date: 2021-03-27T10:59Z\n */\nimport { getMetrics, postMetrics } from './metrics/index';\n\nconst Perfanalytics = () => {\n    // initialise\n    window.addEventListener('load', () => {\n        setTimeout(() => {\n            const metrics = getMetrics();\n            postMetrics(metrics);\n        })\n    }, false);\n};\n\nPerfanalytics();"],
  "mappings": "MAAO,GAAM,GAAa,AAAC,GAA4B,EAAgB,YCEhE,GAAM,GAAsB,IAAM,CAGrC,GAAM,GAA4C,YAAY,iBAAiB,YAG3E,EAA2B,CAAC,MAAO,SAAU,OAAQ,MAAO,cAAe,SAEzE,EAA+B,GACrC,SAAoB,QAAQ,AAAC,GAAkB,CAC3C,GAAM,CAAE,OAAM,gBAAe,WAAU,gBAAiB,EACxD,AAAI,EAAe,QAAQ,IAAkB,IAG7C,EAAU,KAAK,CACX,IAAK,EACL,KAAM,EACN,SAAU,EACV,aAAc,MAGf,GCvBJ,GAAM,GAAU,AAAC,GACb,EAAgB,cAAgB,EAAgB,aCDpD,GAAM,GAAS,AAAC,GAAgD,CACnE,GAAM,GAA4B,EAAY,iBAAiB,SAAS,GACxE,MAAO,GAA4B,EAA0B,UAAY,GCFtE,GAAM,GAAgB,AAAC,GAA4B,EAAgB,aAAe,EAAgB,eCGlG,GAAM,GAAa,IAAkB,CACxC,GAAM,CAAE,eAAgB,OAClB,EAAkB,EAAY,iBAAiB,cAAc,GAEnE,MAAO,CACH,KAAM,EAAQ,GACd,IAAK,EAAO,GACZ,YAAa,EAAW,GACxB,gBAAiB,EAAc,GAC/B,UAAW,MCXZ,GAAM,GAAc,KAAO,IAAY,CAC1C,GAAM,GAAM,gEAEN,EAAmC,IAClC,EACH,WAAY,UAAU,UACtB,IAAK,OAAO,SAAS,MAGrB,EAAU,KAAM,OAAM,GAAG,IAAO,CAChC,OAAQ,OACR,KAAM,OACN,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpB,KAAM,KAAK,UAAU,MCjB7B,AAWA,GAAM,GAAgB,IAAM,CAExB,OAAO,iBAAiB,OAAQ,IAAM,CAClC,WAAW,IAAM,CACb,GAAM,GAAU,IAChB,EAAY,MAEjB,KAGP",
  "names": []
}
